{"ast":null,"code":"var _jsxFileName = \"/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/DesktopNavbar.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport logo from '../logo.png';\nimport LanguageSwitcher from \"./LanguageSwitcher\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState, useEffect } from \"react\";\nimport \"../i18n\";\nimport navLinks from \"../navLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesktopNavbar = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n\n  // Function to handle dynamic translation based on the path\n  const getTranslation = link => {\n    switch (link) {\n      case '/':\n        return t('nav.home');\n      case '/about':\n        return t('nav.about');\n      case '/datasets':\n        return t('nav.datasets');\n      case '/visualisation':\n        return t('nav.visualisation');\n      default:\n        return link.label;\n      // Fallback to the label if the key doesn't exist\n    }\n  };\n  const [isVisible, setIsVisible] = useState(false); // State for animation visibility\n\n  // Trigger navbar visibility when the component mounts\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true); // After the page loads, make navbar visible\n    }, 200); // Delay to allow other components to load\n\n    return () => clearTimeout(timer); // Clean up the timer\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-slate-50/85 backdrop-blur-sm max-w-full sticky top-0 flex flex-wrap space-x-8 items-center shadow-lg z-40 px-3transform transition-all duration-500 ease-in-out ${isVisible ? \"translate-y-0\" : \"translate-y-[-100%]\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"max-w-20\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), navLinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-mono font-semibold text-xl no-underline hover:text-sky-950 hover:italic\",\n        to: link,\n        children: getTranslation(link)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DesktopNavbar, \"GPK54a6uLZ4VMTOqw8u7pemsDnA=\", false, function () {\n  return [useTranslation];\n});\n_c = DesktopNavbar;\nexport default DesktopNavbar;\nvar _c;\n$RefreshReg$(_c, \"DesktopNavbar\");","map":{"version":3,"names":["Link","logo","LanguageSwitcher","useTranslation","useState","useEffect","navLinks","jsxDEV","_jsxDEV","DesktopNavbar","_s","t","getTranslation","link","label","isVisible","setIsVisible","timer","setTimeout","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","to","_c","$RefreshReg$"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/DesktopNavbar.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport logo from '../logo.png';\nimport LanguageSwitcher from \"./LanguageSwitcher\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState, useEffect } from \"react\";\n\nimport \"../i18n\";\n\nimport navLinks from \"../navLinks\";\n\nconst DesktopNavbar = () => {\n  const { t } = useTranslation();\n\n  // Function to handle dynamic translation based on the path\n  const getTranslation = (link) => {\n    switch (link) {\n      case '/':\n        return t('nav.home');\n      case '/about':\n        return t('nav.about');\n      case '/datasets':\n        return t('nav.datasets');\n        case '/visualisation':\n        return t('nav.visualisation');\n      default:\n        return link.label;  // Fallback to the label if the key doesn't exist\n    }\n  };\n  const [isVisible, setIsVisible] = useState(false); // State for animation visibility\n\n  // Trigger navbar visibility when the component mounts\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setIsVisible(true); // After the page loads, make navbar visible\n      }, 200); // Delay to allow other components to load\n  \n      return () => clearTimeout(timer); // Clean up the timer\n    }, []);\n  \n  return (\n    <div className={`bg-slate-50/85 backdrop-blur-sm max-w-full sticky top-0 flex flex-wrap space-x-8 items-center shadow-lg z-40 px-3transform transition-all duration-500 ease-in-out ${isVisible ? \"translate-y-0\" : \"translate-y-[-100%]\"}`}>\n      <img src={logo} className=\"max-w-20\" alt=\"logo\" />\n\n      {navLinks.map((link, index) => (\n        <p key={index}>\n          <Link className=\"font-mono font-semibold text-xl no-underline hover:text-sky-950 hover:italic\" to={link}>\n            {getTranslation(link)}\n          </Link>\n        </p>\n      ))}\n<div className=\"flex grow\" />\n      <LanguageSwitcher />\n    </div>\n  );\n};\n  \nexport default DesktopNavbar;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAAS;AAEhB,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;;EAE9B;EACA,MAAMS,cAAc,GAAIC,IAAI,IAAK;IAC/B,QAAQA,IAAI;MACV,KAAK,GAAG;QACN,OAAOF,CAAC,CAAC,UAAU,CAAC;MACtB,KAAK,QAAQ;QACX,OAAOA,CAAC,CAAC,WAAW,CAAC;MACvB,KAAK,WAAW;QACd,OAAOA,CAAC,CAAC,cAAc,CAAC;MACxB,KAAK,gBAAgB;QACrB,OAAOA,CAAC,CAAC,mBAAmB,CAAC;MAC/B;QACE,OAAOE,IAAI,CAACC,KAAK;MAAG;IACxB;EACF,CAAC;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACEC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAER,oBACET,OAAA;IAAKY,SAAS,EAAE,sKAAsKL,SAAS,GAAG,eAAe,GAAG,qBAAqB,EAAG;IAAAM,QAAA,gBAC1Ob,OAAA;MAAKc,GAAG,EAAErB,IAAK;MAACmB,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjDrB,QAAQ,CAACsB,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBACxBrB,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACR,IAAI;QAACoB,SAAS,EAAC,8EAA8E;QAACU,EAAE,EAAEjB,IAAK;QAAAQ,QAAA,EACrGT,cAAc,CAACC,IAAI;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC,GAHDE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACJ,CAAC,eACRnB,OAAA;MAAKY,SAAS,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBnB,OAAA,CAACN,gBAAgB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5CID,aAAa;EAAA,QACHN,cAAc;AAAA;AAAA4B,EAAA,GADxBtB,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}