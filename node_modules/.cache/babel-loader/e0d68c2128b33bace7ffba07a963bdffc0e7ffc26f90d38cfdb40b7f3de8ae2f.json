{"ast":null,"code":"var _jsxFileName = \"/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/ExpandingLine.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandingLine = ({\n  minWidth = 85,\n  maxWidth = 90,\n  speed = 2000,\n  className = \"\"\n}) => {\n  _s();\n  const [width, setWidth] = useState(minWidth);\n  const [growing, setGrowing] = useState(true);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWidth(prevWidth => {\n        if (growing && prevWidth >= maxWidth) {\n          setGrowing(false);\n          return prevWidth - 10;\n        } else if (!growing && prevWidth <= minWidth) {\n          setGrowing(true);\n          return prevWidth + 10;\n        }\n        return growing ? prevWidth + 10 : prevWidth - 10;\n      });\n    }, speed);\n    return () => clearInterval(interval);\n  }, [growing, minWidth, maxWidth, speed, className]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: `${width}%`,\n      transition: `width ${speed / 1000}s linear`\n    },\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpandingLine, \"qxjV+feC5VrV9NBr2fOVcQgy+a0=\");\n_c = ExpandingLine;\nexport default ExpandingLine;\nvar _c;\n$RefreshReg$(_c, \"ExpandingLine\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ExpandingLine","minWidth","maxWidth","speed","className","_s","width","setWidth","growing","setGrowing","interval","setInterval","prevWidth","clearInterval","style","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/ExpandingLine.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst ExpandingLine = ({ minWidth = 85, maxWidth = 90, speed = 2000, className = \"\" }) => {\n    const [width, setWidth] = useState(minWidth);\n    const [growing, setGrowing] = useState(true);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setWidth((prevWidth) => {\n                if (growing && prevWidth >= maxWidth) {\n                    setGrowing(false);\n                    return prevWidth - 10;\n                } else if (!growing && prevWidth <= minWidth) {\n                    setGrowing(true);\n                    return prevWidth + 10;\n                }\n                return growing ? prevWidth + 10 : prevWidth - 10;\n            });\n        }, speed);\n\n        return () => clearInterval(interval);\n    }, [growing, minWidth, maxWidth, speed, className]);\n\n    return (\n        <div style={{\n            width: `${width}%`,\n            transition: `width ${speed / 1000}s linear`\n        }} \n        className={className}/>\n    );\n};\n\nexport default ExpandingLine;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC,QAAQ,GAAG,EAAE;EAAEC,KAAK,GAAG,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACK,QAAQ,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BJ,QAAQ,CAAEK,SAAS,IAAK;QACpB,IAAIJ,OAAO,IAAII,SAAS,IAAIV,QAAQ,EAAE;UAClCO,UAAU,CAAC,KAAK,CAAC;UACjB,OAAOG,SAAS,GAAG,EAAE;QACzB,CAAC,MAAM,IAAI,CAACJ,OAAO,IAAII,SAAS,IAAIX,QAAQ,EAAE;UAC1CQ,UAAU,CAAC,IAAI,CAAC;UAChB,OAAOG,SAAS,GAAG,EAAE;QACzB;QACA,OAAOJ,OAAO,GAAGI,SAAS,GAAG,EAAE,GAAGA,SAAS,GAAG,EAAE;MACpD,CAAC,CAAC;IACN,CAAC,EAAET,KAAK,CAAC;IAET,OAAO,MAAMU,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACF,OAAO,EAAEP,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,CAAC,CAAC;EAEnD,oBACIL,OAAA;IAAKe,KAAK,EAAE;MACRR,KAAK,EAAE,GAAGA,KAAK,GAAG;MAClBS,UAAU,EAAE,SAASZ,KAAK,GAAG,IAAI;IACrC,CAAE;IACFC,SAAS,EAAEA;EAAU;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE/B,CAAC;AAACd,EAAA,CA5BIL,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}