{"ast":null,"code":"var _jsxFileName = \"/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingEffect = ({\n  words,\n  speed = 100,\n  delay = 1000\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  useEffect(() => {\n    if (wordIndex < words.length) {\n      if (charIndex < words[wordIndex].length) {\n        const timeout = setTimeout(() => {\n          setText(prev => prev + words[wordIndex][charIndex]); // Append each letter\n          setCharIndex(charIndex + 1);\n        }, speed);\n        return () => clearTimeout(timeout);\n      } else {\n        setTimeout(() => {\n          setWordIndex(wordIndex + 1);\n          setCharIndex(0);\n          setText(prev => prev + \" \"); // Add space between words\n        }, delay);\n      }\n    }\n  }, [charIndex, wordIndex, words, speed, delay]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_s(TypingEffect, \"K93xZkNBh5mK/CGPHoqI92DeeiM=\");\n_c = TypingEffect;\nexport default TypingEffect;\nvar _c;\n$RefreshReg$(_c, \"TypingEffect\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TypingEffect","words","speed","delay","_s","text","setText","wordIndex","setWordIndex","charIndex","setCharIndex","length","timeout","setTimeout","prev","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst TypingEffect = ({ words, speed = 100, delay = 1000 }) => {\n    const [text, setText] = useState(\"\");\n    const [wordIndex, setWordIndex] = useState(0);\n    const [charIndex, setCharIndex] = useState(0);\n\n    useEffect(() => {\n        if (wordIndex < words.length) {\n            if (charIndex < words[wordIndex].length) {\n                const timeout = setTimeout(() => {\n                    setText((prev) => prev + words[wordIndex][charIndex]); // Append each letter\n                    setCharIndex(charIndex + 1);\n                }, speed);\n                return () => clearTimeout(timeout);\n            } else {\n                setTimeout(() => {\n                    setWordIndex(wordIndex + 1);\n                    setCharIndex(0);\n                    setText((prev) => prev + \" \"); // Add space between words\n                }, delay);\n            }\n        }\n    }, [charIndex, wordIndex, words, speed, delay]);\n\n    return <span>{text}</span>;\n};\n\nexport default TypingEffect;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK,GAAG,GAAG;EAAEC,KAAK,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,GAAGN,KAAK,CAACU,MAAM,EAAE;MAC1B,IAAIF,SAAS,GAAGR,KAAK,CAACM,SAAS,CAAC,CAACI,MAAM,EAAE;QACrC,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;UAC7BP,OAAO,CAAEQ,IAAI,IAAKA,IAAI,GAAGb,KAAK,CAACM,SAAS,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;UACvDC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;QAC/B,CAAC,EAAEP,KAAK,CAAC;QACT,OAAO,MAAMa,YAAY,CAACH,OAAO,CAAC;MACtC,CAAC,MAAM;QACHC,UAAU,CAAC,MAAM;UACbL,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;UAC3BG,YAAY,CAAC,CAAC,CAAC;UACfJ,OAAO,CAAEQ,IAAI,IAAKA,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QACnC,CAAC,EAAEX,KAAK,CAAC;MACb;IACJ;EACJ,CAAC,EAAE,CAACM,SAAS,EAAEF,SAAS,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,CAAC;EAE/C,oBAAOJ,OAAA;IAAAiB,QAAA,EAAOX;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC9B,CAAC;AAAChB,EAAA,CAxBIJ,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}