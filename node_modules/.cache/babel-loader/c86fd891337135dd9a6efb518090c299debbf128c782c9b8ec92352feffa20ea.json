{"ast":null,"code":"var _jsxFileName = \"/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingEffect = ({\n  words,\n  speed = 100,\n  delay = 1000,\n  initialDelay = 500,\n  disableSpaces = false,\n  disableCursor = false,\n  onComplete\n}) => {\n  _s();\n  const {\n    i18n\n  } = useTranslation(); // Access the current language\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(-1);\n  const [charIndex, setCharIndex] = useState(0);\n  const [startTyping, setStartTyping] = useState(false);\n  const [showCursor, setShowCursor] = useState(true);\n  const [isTyping, setIsTyping] = useState(true);\n  const typingTimeoutRef = useRef(null); // Ref to store typing timeout\n  const delayTimeoutRef = useRef(null); // Ref to store delay timeout\n\n  // Reset typing effect when the language changes\n  useEffect(() => {\n    setDisplayedText(\"\");\n    setCurrentWord(\"\");\n    setWordIndex(-1);\n    setCharIndex(0);\n    setStartTyping(false);\n    setIsTyping(true);\n    const timer = setTimeout(() => {\n      setStartTyping(true);\n      setWordIndex(0);\n    }, initialDelay);\n    return () => clearTimeout(timer);\n  }, [i18n.language, initialDelay]); // Trigger reset when the language changes\n\n  useEffect(() => {\n    if (!startTyping || wordIndex >= words.length) return;\n    if (charIndex < words[wordIndex].length) {\n      typingTimeoutRef.current = setTimeout(() => {\n        setCurrentWord(prev => prev + words[wordIndex][charIndex]);\n        setCharIndex(charIndex + 1);\n      }, speed);\n    } else {\n      delayTimeoutRef.current = setTimeout(() => {\n        setDisplayedText(prev => prev + currentWord + (disableSpaces ? \"\" : \" \"));\n        setCurrentWord(\"\");\n        if (wordIndex === words.length - 1) {\n          setIsTyping(false);\n          onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n        } else {\n          setWordIndex(wordIndex + 1);\n          setCharIndex(0);\n        }\n      }, delay);\n    }\n    return () => {\n      clearTimeout(typingTimeoutRef.current);\n      clearTimeout(delayTimeoutRef.current);\n    };\n  }, [charIndex, wordIndex, words, speed, delay, disableSpaces, onComplete, currentWord, startTyping]);\n  useEffect(() => {\n    if (!isTyping) return;\n    const cursorInterval = setInterval(() => {\n      setShowCursor(prev => !prev);\n    }, 200);\n    return () => clearInterval(cursorInterval);\n  }, [isTyping]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [displayedText + currentWord, /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"inline-block\",\n        width: \"8px\",\n        height: \"18px\",\n        backgroundColor: showCursor && isTyping && !disableCursor ? \"black\" : \"transparent\",\n        marginLeft: \"2px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingEffect, \"4v8PQxiSN7LJlRtfF3296URdxPM=\", false, function () {\n  return [useTranslation];\n});\n_c = TypingEffect;\nexport default TypingEffect;\nvar _c;\n$RefreshReg$(_c, \"TypingEffect\");","map":{"version":3,"names":["useState","useEffect","useRef","useTranslation","jsxDEV","_jsxDEV","TypingEffect","words","speed","delay","initialDelay","disableSpaces","disableCursor","onComplete","_s","i18n","displayedText","setDisplayedText","currentWord","setCurrentWord","wordIndex","setWordIndex","charIndex","setCharIndex","startTyping","setStartTyping","showCursor","setShowCursor","isTyping","setIsTyping","typingTimeoutRef","delayTimeoutRef","timer","setTimeout","clearTimeout","language","length","current","prev","cursorInterval","setInterval","clearInterval","children","style","display","width","height","backgroundColor","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TypingEffect = ({ \n    words, \n    speed = 100, \n    delay = 1000, \n    initialDelay = 500, \n    disableSpaces = false, \n    disableCursor = false, \n    onComplete \n}) => {\n    const { i18n } = useTranslation(); // Access the current language\n    const [displayedText, setDisplayedText] = useState(\"\"); \n    const [currentWord, setCurrentWord] = useState(\"\"); \n    const [wordIndex, setWordIndex] = useState(-1);\n    const [charIndex, setCharIndex] = useState(0);\n    const [startTyping, setStartTyping] = useState(false);\n    const [showCursor, setShowCursor] = useState(true);\n    const [isTyping, setIsTyping] = useState(true); \n\n    const typingTimeoutRef = useRef(null); // Ref to store typing timeout\n    const delayTimeoutRef = useRef(null); // Ref to store delay timeout\n\n    // Reset typing effect when the language changes\n    useEffect(() => {\n        setDisplayedText(\"\");\n        setCurrentWord(\"\");\n        setWordIndex(-1);\n        setCharIndex(0);\n        setStartTyping(false);\n        setIsTyping(true);\n\n        const timer = setTimeout(() => {\n            setStartTyping(true);\n            setWordIndex(0);\n        }, initialDelay);\n\n        return () => clearTimeout(timer);\n    }, [i18n.language, initialDelay]); // Trigger reset when the language changes\n\n    useEffect(() => {\n        if (!startTyping || wordIndex >= words.length) return;\n\n        if (charIndex < words[wordIndex].length) {\n            typingTimeoutRef.current = setTimeout(() => {\n                setCurrentWord((prev) => prev + words[wordIndex][charIndex]);\n                setCharIndex(charIndex + 1);\n            }, speed);\n        } else {\n            delayTimeoutRef.current = setTimeout(() => {\n                setDisplayedText((prev) => prev + currentWord + (disableSpaces ? \"\" : \" \"));\n                setCurrentWord(\"\");\n                if (wordIndex === words.length - 1) {\n                    setIsTyping(false);\n                    onComplete?.();\n                } else {\n                    setWordIndex(wordIndex + 1);\n                    setCharIndex(0);\n                }\n            }, delay);\n        }\n\n        return () => {\n            clearTimeout(typingTimeoutRef.current);\n            clearTimeout(delayTimeoutRef.current);\n        };\n    }, [charIndex, wordIndex, words, speed, delay, disableSpaces, onComplete, currentWord, startTyping]);\n\n    useEffect(() => {\n        if (!isTyping) return;\n        const cursorInterval = setInterval(() => {\n            setShowCursor((prev) => !prev);\n        }, 200);\n        return () => clearInterval(cursorInterval);\n    }, [isTyping]);\n\n    return (\n        <span>\n            {displayedText + currentWord}\n            <span style={{\n                    display: \"inline-block\",\n                    width: \"8px\",\n                    height: \"18px\",\n                    backgroundColor: (showCursor && isTyping && !disableCursor) ? \"black\" : \"transparent\",\n                    marginLeft: \"2px\"\n                }}></span>\n        </span>\n    );\n};\n\nexport default TypingEffect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}