{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import{useTranslation}from\"react-i18next\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TypingEffect=_ref=>{let{words,speed=100,delay=1000,initialDelay=500,disableSpaces=false,disableCursor=false,onComplete}=_ref;const{i18n}=useTranslation();// Access the current language\nconst[displayedText,setDisplayedText]=useState(\"\");const[currentWord,setCurrentWord]=useState(\"\");const[wordIndex,setWordIndex]=useState(-1);const[charIndex,setCharIndex]=useState(0);const[startTyping,setStartTyping]=useState(false);const[showCursor,setShowCursor]=useState(true);const[isTyping,setIsTyping]=useState(true);const typingTimeoutRef=useRef(null);// Ref to store typing timeout\nconst delayTimeoutRef=useRef(null);// Ref to store delay timeout\n// Reset typing effect when the language changes\nuseEffect(()=>{setDisplayedText(\"\");setCurrentWord(\"\");setWordIndex(-1);setCharIndex(0);setStartTyping(false);setIsTyping(true);const timer=setTimeout(()=>{setStartTyping(true);setWordIndex(0);},initialDelay);return()=>clearTimeout(timer);},[i18n.language,initialDelay]);// Trigger reset when the language changes\nuseEffect(()=>{if(!startTyping||wordIndex>=words.length)return;if(charIndex<words[wordIndex].length){typingTimeoutRef.current=setTimeout(()=>{setCurrentWord(prev=>prev+words[wordIndex][charIndex]);setCharIndex(charIndex+1);},speed);}else{delayTimeoutRef.current=setTimeout(()=>{setDisplayedText(prev=>prev+currentWord+(disableSpaces?\"\":\" \"));setCurrentWord(\"\");if(wordIndex===words.length-1){setIsTyping(false);onComplete===null||onComplete===void 0?void 0:onComplete();}else{setWordIndex(wordIndex+1);setCharIndex(0);}},delay);}return()=>{clearTimeout(typingTimeoutRef.current);clearTimeout(delayTimeoutRef.current);};},[charIndex,wordIndex,words,speed,delay,disableSpaces,onComplete,currentWord,startTyping]);useEffect(()=>{if(!isTyping)return;const cursorInterval=setInterval(()=>{setShowCursor(prev=>!prev);},200);return()=>clearInterval(cursorInterval);},[isTyping]);return/*#__PURE__*/_jsxs(\"span\",{children:[displayedText+currentWord,/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\",width:\"8px\",height:\"18px\",backgroundColor:showCursor&&isTyping&&!disableCursor?\"black\":\"transparent\",marginLeft:\"2px\"}})]});};export default TypingEffect;","map":{"version":3,"names":["useState","useEffect","useRef","useTranslation","jsx","_jsx","jsxs","_jsxs","TypingEffect","_ref","words","speed","delay","initialDelay","disableSpaces","disableCursor","onComplete","i18n","displayedText","setDisplayedText","currentWord","setCurrentWord","wordIndex","setWordIndex","charIndex","setCharIndex","startTyping","setStartTyping","showCursor","setShowCursor","isTyping","setIsTyping","typingTimeoutRef","delayTimeoutRef","timer","setTimeout","clearTimeout","language","length","current","prev","cursorInterval","setInterval","clearInterval","children","style","display","width","height","backgroundColor","marginLeft"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TypingEffect = ({ \n    words, \n    speed = 100, \n    delay = 1000, \n    initialDelay = 500, \n    disableSpaces = false, \n    disableCursor = false, \n    onComplete \n}) => {\n    const { i18n } = useTranslation(); // Access the current language\n    const [displayedText, setDisplayedText] = useState(\"\"); \n    const [currentWord, setCurrentWord] = useState(\"\"); \n    const [wordIndex, setWordIndex] = useState(-1);\n    const [charIndex, setCharIndex] = useState(0);\n    const [startTyping, setStartTyping] = useState(false);\n    const [showCursor, setShowCursor] = useState(true);\n    const [isTyping, setIsTyping] = useState(true); \n\n    const typingTimeoutRef = useRef(null); // Ref to store typing timeout\n    const delayTimeoutRef = useRef(null); // Ref to store delay timeout\n\n    // Reset typing effect when the language changes\n    useEffect(() => {\n        setDisplayedText(\"\");\n        setCurrentWord(\"\");\n        setWordIndex(-1);\n        setCharIndex(0);\n        setStartTyping(false);\n        setIsTyping(true);\n\n        const timer = setTimeout(() => {\n            setStartTyping(true);\n            setWordIndex(0);\n        }, initialDelay);\n\n        return () => clearTimeout(timer);\n    }, [i18n.language, initialDelay]); // Trigger reset when the language changes\n\n    useEffect(() => {\n        if (!startTyping || wordIndex >= words.length) return;\n\n        if (charIndex < words[wordIndex].length) {\n            typingTimeoutRef.current = setTimeout(() => {\n                setCurrentWord((prev) => prev + words[wordIndex][charIndex]);\n                setCharIndex(charIndex + 1);\n            }, speed);\n        } else {\n            delayTimeoutRef.current = setTimeout(() => {\n                setDisplayedText((prev) => prev + currentWord + (disableSpaces ? \"\" : \" \"));\n                setCurrentWord(\"\");\n                if (wordIndex === words.length - 1) {\n                    setIsTyping(false);\n                    onComplete?.();\n                } else {\n                    setWordIndex(wordIndex + 1);\n                    setCharIndex(0);\n                }\n            }, delay);\n        }\n\n        return () => {\n            clearTimeout(typingTimeoutRef.current);\n            clearTimeout(delayTimeoutRef.current);\n        };\n    }, [charIndex, wordIndex, words, speed, delay, disableSpaces, onComplete, currentWord, startTyping]);\n\n    useEffect(() => {\n        if (!isTyping) return;\n        const cursorInterval = setInterval(() => {\n            setShowCursor((prev) => !prev);\n        }, 200);\n        return () => clearInterval(cursorInterval);\n    }, [isTyping]);\n\n    return (\n        <span>\n            {displayedText + currentWord}\n            <span style={{\n                    display: \"inline-block\",\n                    width: \"8px\",\n                    height: \"18px\",\n                    backgroundColor: (showCursor && isTyping && !disableCursor) ? \"black\" : \"transparent\",\n                    marginLeft: \"2px\"\n                }}></span>\n        </span>\n    );\n};\n\nexport default TypingEffect;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACnD,OAASC,cAAc,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAQf,IARgB,CAClBC,KAAK,CACLC,KAAK,CAAG,GAAG,CACXC,KAAK,CAAG,IAAI,CACZC,YAAY,CAAG,GAAG,CAClBC,aAAa,CAAG,KAAK,CACrBC,aAAa,CAAG,KAAK,CACrBC,UACJ,CAAC,CAAAP,IAAA,CACG,KAAM,CAAEQ,IAAK,CAAC,CAAGd,cAAc,CAAC,CAAC,CAAE;AACnC,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAAC0B,WAAW,CAAEC,cAAc,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC4B,UAAU,CAAEC,aAAa,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAAC8B,QAAQ,CAAEC,WAAW,CAAC,CAAG/B,QAAQ,CAAC,IAAI,CAAC,CAE9C,KAAM,CAAAgC,gBAAgB,CAAG9B,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAM,CAAA+B,eAAe,CAAG/B,MAAM,CAAC,IAAI,CAAC,CAAE;AAEtC;AACAD,SAAS,CAAC,IAAM,CACZkB,gBAAgB,CAAC,EAAE,CAAC,CACpBE,cAAc,CAAC,EAAE,CAAC,CAClBE,YAAY,CAAC,CAAC,CAAC,CAAC,CAChBE,YAAY,CAAC,CAAC,CAAC,CACfE,cAAc,CAAC,KAAK,CAAC,CACrBI,WAAW,CAAC,IAAI,CAAC,CAEjB,KAAM,CAAAG,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC3BR,cAAc,CAAC,IAAI,CAAC,CACpBJ,YAAY,CAAC,CAAC,CAAC,CACnB,CAAC,CAAEV,YAAY,CAAC,CAEhB,MAAO,IAAMuB,YAAY,CAACF,KAAK,CAAC,CACpC,CAAC,CAAE,CAACjB,IAAI,CAACoB,QAAQ,CAAExB,YAAY,CAAC,CAAC,CAAE;AAEnCZ,SAAS,CAAC,IAAM,CACZ,GAAI,CAACyB,WAAW,EAAIJ,SAAS,EAAIZ,KAAK,CAAC4B,MAAM,CAAE,OAE/C,GAAId,SAAS,CAAGd,KAAK,CAACY,SAAS,CAAC,CAACgB,MAAM,CAAE,CACrCN,gBAAgB,CAACO,OAAO,CAAGJ,UAAU,CAAC,IAAM,CACxCd,cAAc,CAAEmB,IAAI,EAAKA,IAAI,CAAG9B,KAAK,CAACY,SAAS,CAAC,CAACE,SAAS,CAAC,CAAC,CAC5DC,YAAY,CAACD,SAAS,CAAG,CAAC,CAAC,CAC/B,CAAC,CAAEb,KAAK,CAAC,CACb,CAAC,IAAM,CACHsB,eAAe,CAACM,OAAO,CAAGJ,UAAU,CAAC,IAAM,CACvChB,gBAAgB,CAAEqB,IAAI,EAAKA,IAAI,CAAGpB,WAAW,EAAIN,aAAa,CAAG,EAAE,CAAG,GAAG,CAAC,CAAC,CAC3EO,cAAc,CAAC,EAAE,CAAC,CAClB,GAAIC,SAAS,GAAKZ,KAAK,CAAC4B,MAAM,CAAG,CAAC,CAAE,CAChCP,WAAW,CAAC,KAAK,CAAC,CAClBf,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAG,CAAC,CAClB,CAAC,IAAM,CACHO,YAAY,CAACD,SAAS,CAAG,CAAC,CAAC,CAC3BG,YAAY,CAAC,CAAC,CAAC,CACnB,CACJ,CAAC,CAAEb,KAAK,CAAC,CACb,CAEA,MAAO,IAAM,CACTwB,YAAY,CAACJ,gBAAgB,CAACO,OAAO,CAAC,CACtCH,YAAY,CAACH,eAAe,CAACM,OAAO,CAAC,CACzC,CAAC,CACL,CAAC,CAAE,CAACf,SAAS,CAAEF,SAAS,CAAEZ,KAAK,CAAEC,KAAK,CAAEC,KAAK,CAAEE,aAAa,CAAEE,UAAU,CAAEI,WAAW,CAAEM,WAAW,CAAC,CAAC,CAEpGzB,SAAS,CAAC,IAAM,CACZ,GAAI,CAAC6B,QAAQ,CAAE,OACf,KAAM,CAAAW,cAAc,CAAGC,WAAW,CAAC,IAAM,CACrCb,aAAa,CAAEW,IAAI,EAAK,CAACA,IAAI,CAAC,CAClC,CAAC,CAAE,GAAG,CAAC,CACP,MAAO,IAAMG,aAAa,CAACF,cAAc,CAAC,CAC9C,CAAC,CAAE,CAACX,QAAQ,CAAC,CAAC,CAEd,mBACIvB,KAAA,SAAAqC,QAAA,EACK1B,aAAa,CAAGE,WAAW,cAC5Bf,IAAA,SAAMwC,KAAK,CAAE,CACLC,OAAO,CAAE,cAAc,CACvBC,KAAK,CAAE,KAAK,CACZC,MAAM,CAAE,MAAM,CACdC,eAAe,CAAGrB,UAAU,EAAIE,QAAQ,EAAI,CAACf,aAAa,CAAI,OAAO,CAAG,aAAa,CACrFmC,UAAU,CAAE,KAChB,CAAE,CAAO,CAAC,EACZ,CAAC,CAEf,CAAC,CAED,cAAe,CAAA1C,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}