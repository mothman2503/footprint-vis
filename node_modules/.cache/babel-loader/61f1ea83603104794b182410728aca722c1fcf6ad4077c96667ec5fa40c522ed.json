{"ast":null,"code":"var _jsxFileName = \"/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingEffect = ({\n  words,\n  speed = 100,\n  delay = 1000,\n  disableSpaces = false,\n  onComplete\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  useEffect(() => {\n    setText(\"\"); // Reset text when words change\n    setWordIndex(0);\n    setCharIndex(0);\n  }, [words]); // This ensures it works multiple times on the page\n\n  useEffect(() => {\n    if (wordIndex < words.length) {\n      if (charIndex < words[wordIndex].length) {\n        const timeout = setTimeout(() => {\n          setText(prev => prev + words[wordIndex][charIndex]); // Append each letter\n          setCharIndex(charIndex + 1);\n        }, speed);\n        return () => clearTimeout(timeout);\n      } else {\n        setTimeout(() => {\n          if (wordIndex === words.length - 1) {\n            onComplete === null || onComplete === void 0 ? void 0 : onComplete(); // Call onComplete when done\n          } else {\n            setWordIndex(wordIndex + 1);\n            setCharIndex(0);\n            setText(prev => prev + (disableSpaces ? \"\" : \" \")); // Add space between words\n          }\n        }, delay);\n      }\n    }\n  }, [charIndex, wordIndex, words, speed, delay, disableSpaces, onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n_s(TypingEffect, \"s5y/wYKKAlxZ0NIY9lsu/fQyt3o=\");\n_c = TypingEffect;\nexport default TypingEffect;\nvar _c;\n$RefreshReg$(_c, \"TypingEffect\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TypingEffect","words","speed","delay","disableSpaces","onComplete","_s","text","setText","wordIndex","setWordIndex","charIndex","setCharIndex","length","timeout","setTimeout","prev","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/othmanghani.13/Desktop/OvGU/Thesis/footprint-vis/src/components/TypingEffect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst TypingEffect = ({ words, speed = 100, delay = 1000, disableSpaces = false, onComplete }) => {\n    const [text, setText] = useState(\"\");\n    const [wordIndex, setWordIndex] = useState(0);\n    const [charIndex, setCharIndex] = useState(0);\n\n    useEffect(() => {\n        setText(\"\"); // Reset text when words change\n        setWordIndex(0);\n        setCharIndex(0);\n    }, [words]); // This ensures it works multiple times on the page\n\n    useEffect(() => {\n        if (wordIndex < words.length) {\n            if (charIndex < words[wordIndex].length) {\n                const timeout = setTimeout(() => {\n                    setText((prev) => prev + words[wordIndex][charIndex]); // Append each letter\n                    setCharIndex(charIndex + 1);\n                }, speed);\n                return () => clearTimeout(timeout);\n            } else {\n                setTimeout(() => {\n                    if (wordIndex === words.length - 1) {\n                        onComplete?.(); // Call onComplete when done\n                    } else {\n                        setWordIndex(wordIndex + 1);\n                        setCharIndex(0);\n                        setText((prev) => prev + (disableSpaces ? \"\" : \" \")); // Add space between words\n                    }\n                }, delay);\n            }\n        }\n    }, [charIndex, wordIndex, words, speed, delay, disableSpaces, onComplete]);\n\n    return <span>{text}</span>;\n};\n\nexport default TypingEffect;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK,GAAG,GAAG;EAAEC,KAAK,GAAG,IAAI;EAAEC,aAAa,GAAG,KAAK;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZW,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACbE,YAAY,CAAC,CAAC,CAAC;IACfE,YAAY,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEbJ,SAAS,CAAC,MAAM;IACZ,IAAIY,SAAS,GAAGR,KAAK,CAACY,MAAM,EAAE;MAC1B,IAAIF,SAAS,GAAGV,KAAK,CAACQ,SAAS,CAAC,CAACI,MAAM,EAAE;QACrC,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;UAC7BP,OAAO,CAAEQ,IAAI,IAAKA,IAAI,GAAGf,KAAK,CAACQ,SAAS,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;UACvDC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;QAC/B,CAAC,EAAET,KAAK,CAAC;QACT,OAAO,MAAMe,YAAY,CAACH,OAAO,CAAC;MACtC,CAAC,MAAM;QACHC,UAAU,CAAC,MAAM;UACb,IAAIN,SAAS,KAAKR,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;YAChCR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,CAAC,CAAC,CAAC;UACpB,CAAC,MAAM;YACHK,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;YAC3BG,YAAY,CAAC,CAAC,CAAC;YACfJ,OAAO,CAAEQ,IAAI,IAAKA,IAAI,IAAIZ,aAAa,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;UAC1D;QACJ,CAAC,EAAED,KAAK,CAAC;MACb;IACJ;EACJ,CAAC,EAAE,CAACQ,SAAS,EAAEF,SAAS,EAAER,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,UAAU,CAAC,CAAC;EAE1E,oBAAON,OAAA;IAAAmB,QAAA,EAAOX;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC9B,CAAC;AAAChB,EAAA,CAlCIN,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}